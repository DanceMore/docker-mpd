# Build Stage
FROM alpine:3.15 AS build

# Set environment variables
ARG VERSION=0.23
ARG PATCH=13

# Install build dependencies and perform build steps
RUN set -x \
  && apk add --no-cache \
    g++ \
    meson \
    py3-sphinx \
    lame-dev \
    glib-dev \
    curl-dev \
    libao-dev \
    libmad-dev \
    flac-dev \
    libogg-dev \
    faad2-dev \
    libid3tag-dev \
    libvorbis-dev \
    alsa-lib-dev \
    libsamplerate-dev \
    libshout-dev \
    libmodplug-dev \
    boost-dev \
    icu-dev \
    libnfs-dev \
    # samba-dev \
    opus-dev \
    ffmpeg-dev \
    libmpdclient-dev \
    # libcdio-paranoia-dev \
    libcap \
    # gtest-dev \
    # gtest \
    libsndfile-dev \
    sqlite-dev \
    soxr-dev \
    bzip2-dev \
    libcdio-dev \
    zlib-dev \
    mpg123-dev \
    wavpack-dev \
    ca-certificates
    #&& apk add --no-cache \

# Copy source code and perform build
WORKDIR /usr/src/mpd
RUN set -x \
    && wget -O mpd.tar.xz https://www.musicpd.org/download/mpd/$VERSION/mpd-$VERSION.$PATCH.tar.xz \
    && tar xf mpd.tar.xz --strip-components=1 -C /usr/src/mpd \
    && rm mpd.tar.xz

RUN set -x \
  && meson \
    --prefix=/usr/local \
    --sysconfdir=/etc \
    --localstatedir=/var \
    --buildtype=plain \
    output \
  && ninja -C output install

# Runtime Stage
FROM alpine:3.15

# Copy built artifacts from the build stage
COPY --from=build /usr/local /usr/local
COPY --from=build /etc /etc
COPY --from=build /var /var

# Install runtime dependencies and perform cleanup
RUN set -x \
    && adduser -D mpd \
    && mkdir /mpd \
    && chown mpd:mpd /mpd

RUN set -x \
  && apk add --no-cache \
    lame \
    glib \
    curl \
    libao \
    libmad \
    flac \
    libogg \
    faad2 \
    libid3tag \
    libvorbis \
    libsamplerate \
    libshout \
    libmodplug \
    icu \
    opus \
    ffmpeg \
    libmpdclient \
    libsndfile \
    sqlite \
    soxr \
    bzip2 \
    libcdio \
    zlib \
    mpg123 \
    wavpack \
    ca-certificates

# Set the user to run the application
USER mpd

# Specify the command to run the application
COPY mpd.conf /etc/mpd.conf
COPY docker-entrypoint.sh /
ENTRYPOINT ["/docker-entrypoint.sh"]
